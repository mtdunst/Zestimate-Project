knitr::opts_chunk$set(echo = TRUE)
# Load some libraries
rm(list = ls())
library(tidycensus)
library(viridis)
library(tidyverse)
library(sf)
library(spdep)
library(caret)
library(ckanr)
library(FNN)
library(grid)
library(gridExtra)
library(ggcorrplot) # plot correlation plot
library(corrr)      # another way to plot correlation plot
library(kableExtra)
library(jtools)     # for regression model plots
library(ggstance) # to support jtools plots
library(ggpubr)    # plotting R^2 value on ggplot point scatter
library(broom.mixed) # needed for effects plots
library(stargazer)
options(scipen=999) #scientific notation off
# Functions and data directory
census_api_key("8c8e36c4b5046c4d7f8a5d9f0f7a7d0ddde86e8b")
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#25CB10", "#5AB60C", "#8FA108",   "#C48C04", "#FA7800")
#Import sales data, remove columns we won't need, set CRS for North Carolina
CLT_sales <-
st_read("https://github.com/mafichman/MUSA_508_Lab/raw/main/Midterm/data/2022/studentData.geojson") %>%
st_transform('ESRI:103500')
sales_abridged <- CLT_sales[c(5,9,20,21,26,28,30:46,57:60,67,68,70,71,72)]
sales_abridged.sf <-
sales_abridged %>%
st_as_sf(sf_column_name=geometry) %>%
st_transform('ESRI:103500') %>%
mutate(Age = 2022 - yearbuilt)
sales_abridged.sf <-
sales_abridged.sf %>%
filter(units < 205)
ggscatter(sales_abridged.sf,
x = "heatedarea",
y = "price",
add = "reg.line") +
stat_cor(label.y = 50000000)
View(CLT_sales)
View(sales_abridged)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
# Adding demographic data
CLT_demo.sf <-
get_acs(geography = "tract",
variables = c("B19013_001E", "B15003_022E","B15003_001E"),
year=2020, state=37, county=119,
geometry=TRUE, output="wide") %>%
st_transform('ESRI:103500') %>%
dplyr::select( -NAME, -B19013_001M, -B15003_022M, -B15003_001M)
